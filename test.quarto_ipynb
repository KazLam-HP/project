{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Refugee Dashboard\"\n",
        "format: \n",
        "  dashboard:\n",
        "    theme: superhero\n",
        "---\n",
        "\n",
        "\n",
        "import pandas as pd\n",
        "import plotly.express as px\n",
        "import country_converter as coco\n",
        "\n",
        "# Load and process the data for origin\n",
        "df_orig = pd.read_csv(\"data/ref_country_orig.csv\")\n",
        "df_orig = df_orig.melt(id_vars=[\"country\"], var_name=\"Year\", value_name=\"Refugees_origin\")\n",
        "df_orig = df_orig.dropna(subset=[\"Refugees_origin\"])\n",
        "df_orig[\"Year\"] = df_orig[\"Year\"].astype(int)\n",
        "\n",
        "# Load and process the data for asylum\n",
        "df_asylm = pd.read_csv(\"data/ref_country_asylm.csv\")\n",
        "df_asylm = df_asylm.melt(id_vars=[\"country\"], var_name=\"Year\", value_name=\"Refugees_asylum\")\n",
        "df_asylm = df_asylm.dropna(subset=[\"Refugees_asylum\"])\n",
        "df_asylm[\"Year\"] = df_asylm[\"Year\"].astype(int)\n",
        "\n",
        "# Sort countries by total refugees for better visualization\n",
        "orig_sorted = df_orig.groupby(\"country\")[\"Refugees_origin\"].sum().sort_values(ascending=False).index\n",
        "asylm_sorted = df_asylm.groupby(\"country\")[\"Refugees_asylum\"].sum().sort_values(ascending=False).index\n",
        "\n",
        "# Merge datasets for cross-analysis\n",
        "df_combined = pd.merge(df_orig, df_asylm, on=[\"country\", \"Year\"], how=\"inner\")\n",
        "\n",
        "# Compute global annual totals (refugees + asylum seekers)\n",
        "df_total = df_combined.groupby(\"Year\").agg({\n",
        "    \"Refugees_origin\": \"sum\",\n",
        "    \"Refugees_asylum\": \"sum\"\n",
        "}).reset_index()\n",
        "\n",
        "df_total[\"Total\"] = df_total[\"Refugees_origin\"] + df_total[\"Refugees_asylum\"]\n",
        "\n",
        "# Create the interactive figure with Plotly Express\n",
        "fig1 = px.bar(\n",
        "    df_total, \n",
        "    x=\"Year\", \n",
        "    y=\"Total\",\n",
        "    title=\"<b>Global Forcibly Displaced People Trends</b>\",\n",
        "    labels={\"Total\": \"Total (in Millions)\", \"Year\": \"Year\"},\n",
        "    color_discrete_sequence=[\"#0072c6\"],\n",
        "    template=\"plotly_white\"\n",
        ")\n",
        "\n",
        "\n",
        "# Total number of refugees\n",
        "total_refugees_origin = int(df_orig[\"Refugees_origin\"].sum())\n",
        "total_refugees_asylum = int(df_asylm[\"Refugees_asylum\"].sum())\n",
        "\n",
        "# Count only countries with actual data\n",
        "valid_origin_countries = df_orig.groupby(\"country\")[\"Refugees_origin\"].sum()\n",
        "total_countries_origin = (valid_origin_countries > 0).sum()\n",
        "\n",
        "valid_asylum_countries = df_asylm.groupby(\"country\")[\"Refugees_asylum\"].sum()\n",
        "total_countries_asylum = (valid_asylum_countries > 0).sum()\n",
        "\n",
        "# Summary metrics\n",
        "total_refugees_origin = int(df_orig[\"Refugees_origin\"].sum())\n",
        "total_refugees_asylum = int(df_asylm[\"Refugees_asylum\"].sum())\n",
        "valid_origin = df_orig.groupby(\"country\")[\"Refugees_origin\"].sum()\n",
        "total_countries_origin = (valid_origin > 0).sum()\n",
        "valid_asylum = df_asylm.groupby(\"country\")[\"Refugees_asylum\"].sum()\n",
        "total_countries_asylum = (valid_asylum > 0).sum()\n",
        "\n",
        "\n",
        "### Countries of origin\n",
        "\n",
        "# Top 10 countries of origin by total refugees\n",
        "top_origins = (\n",
        "    df_orig.groupby(\"country\")[\"Refugees_origin\"]\n",
        "    .sum()\n",
        "    .sort_values(ascending=False)\n",
        "    .head(10)\n",
        "    .reset_index()\n",
        ")\n",
        "\n",
        "# Trend data for top 5 origin countries\n",
        "top_5_countries = top_origins[\"country\"].head(5).tolist()\n",
        "trend_top_origins = df_orig[df_orig[\"country\"].isin(top_5_countries)]\n",
        "\n",
        "# Ensure Year is integer\n",
        "trend_top_origins = trend_top_origins.copy()\n",
        "trend_top_origins[\"Year\"] = trend_top_origins[\"Year\"].astype(int)\n",
        "\n",
        "\n",
        "fig_top10_origin = px.bar(\n",
        "    top_origins,\n",
        "    x=\"Refugees_origin\",\n",
        "    y=\"country\",\n",
        "    orientation=\"h\",\n",
        "    title=\"Top 10 Countries of Origin\",\n",
        "    labels={\"Refugees_origin\": \"Total Refugees\", \"country\": \"Country\"},\n",
        "    template=\"plotly_white\",\n",
        "    color_discrete_sequence=[\"#0072c6\"]\n",
        ")\n",
        "\n",
        "fig_top10_origin.update_layout(\n",
        "    yaxis=dict(categoryorder=\"total ascending\")\n",
        ")\n",
        "\n",
        "fig_trend_origins = px.line(\n",
        "    trend_top_origins,\n",
        "    x=\"Year\",\n",
        "    y=\"Refugees_origin\",\n",
        "    color=\"country\",\n",
        "    title=\"<b>Trends in Refugees by Country of Origin (Top 5)</b>\",\n",
        "    labels={\"Refugees_origin\": \"Number of Refugees\", \"Year\": \"Year\"},\n",
        "    template=\"plotly_white\"\n",
        ")\n",
        "\n",
        "\n",
        "### Countries of asylum\n",
        "\n",
        "# Prepare data\n",
        "df_asylm = df_asylm.copy()\n",
        "df_asylm[\"Year\"] = df_asylm[\"Year\"].astype(int)\n",
        "\n",
        "# 1. Total number of countries with actual asylum data\n",
        "valid_asylum = df_asylm.groupby(\"country\")[\"Refugees_asylum\"].sum()\n",
        "total_countries_asylum = (valid_asylum > 0).sum()\n",
        "\n",
        "# 2. Top 10 countries of asylum (by total number of refugees)\n",
        "top_asylums = (\n",
        "    df_asylm.groupby(\"country\")[\"Refugees_asylum\"]\n",
        "    .sum()\n",
        "    .sort_values(ascending=False)\n",
        "    .head(10)\n",
        "    .reset_index()\n",
        ")\n",
        "\n",
        "# 3. Time trends for top 5 countries\n",
        "top_5_asylum_countries = top_asylums[\"country\"].head(5).tolist()\n",
        "trend_top_asylums = df_asylm[df_asylm[\"country\"].isin(top_5_asylum_countries)]\n",
        "trend_top_asylums[\"Year\"] = trend_top_asylums[\"Year\"].astype(int)\n",
        "\n",
        "# 4. Bar Chart - Top 10 Countries of Asylum\n",
        "fig_top10_asylum = px.bar(\n",
        "    top_asylums,\n",
        "    x=\"Refugees_asylum\",\n",
        "    y=\"country\",\n",
        "    orientation=\"h\",\n",
        "    title=\"Top 10 Countries of Asylum\",\n",
        "    labels={\"Refugees_asylum\": \"Total Refugees Hosted\", \"country\": \"Country\"},\n",
        "    template=\"plotly_white\",\n",
        "    color_discrete_sequence=[\"#009688\"]\n",
        ")\n",
        "fig_top10_asylum.update_layout(yaxis=dict(categoryorder=\"total ascending\"))\n",
        "\n",
        "# 5. Line Chart - Trends for Top 5 Countries of Asylum\n",
        "fig_trend_asylums = px.line(\n",
        "    trend_top_asylums,\n",
        "    x=\"Year\",\n",
        "    y=\"Refugees_asylum\",\n",
        "    color=\"country\",\n",
        "    title=\"Trends in Refugees by Country of Asylum (Top 5)\",\n",
        "    labels={\"Refugees_asylum\": \"Number of Refugees Hosted\", \"Year\": \"Year\"},\n",
        "    template=\"plotly_white\"\n",
        ")\n",
        "\n",
        "fig_trend_asylums.update_layout(\n",
        "    margin=dict(t=60, r=40, b=40, l=40),\n",
        "    legend=dict(\n",
        "        orientation=\"h\",\n",
        "        yanchor=\"bottom\",\n",
        "        y=1.02,\n",
        "        xanchor=\"right\",\n",
        "        x=1,\n",
        "        bgcolor=\"rgba(255,255,255,0.7)\",\n",
        "        bordercolor=\"black\",\n",
        "        borderwidth=1\n",
        "    ),\n",
        "    xaxis=dict(\n",
        "        tickmode=\"linear\",\n",
        "        tick0=trend_top_asylums[\"Year\"].min(),\n",
        "        dtick=5\n",
        "    )\n",
        ")\n",
        "\n",
        "### Regions insigth\n",
        "\n",
        "# Sample country list from your data (replace with actual df_asylm[\"country\"])\n",
        "countries = df_asylm[\"country\"].unique()\n",
        "\n",
        "# Convert to DataFrame\n",
        "country_df = pd.DataFrame({\"country\": countries})\n",
        "\n",
        "# Use coco to get standardized ISO3 and UN regions\n",
        "cc = coco.CountryConverter()\n",
        "country_df[\"iso3\"] = cc.convert(names=country_df[\"country\"], to=\"ISO3\")\n",
        "country_df[\"region\"] = cc.convert(names=country_df[\"country\"], to=\"UNregion\")\n",
        "country_df[\"subregion\"] = cc.convert(names=country_df[\"country\"], to=\"UNsubregion\")\n",
        "\n",
        "# Preview\n",
        "country_df.head()\n",
        "\n",
        "# Merge region info into df_asylm and df_orig\n",
        "df_asylm = df_asylm.merge(country_df[[\"country\", \"region\", \"subregion\"]], on=\"country\", how=\"left\")\n",
        "df_orig = df_orig.merge(country_df[[\"country\", \"region\", \"subregion\"]], on=\"country\", how=\"left\")\n",
        "\n",
        "regional_totals = (\n",
        "    df_asylm.groupby(\"region\")[\"Refugees_asylum\"]\n",
        "    .sum()\n",
        "    .sort_values(ascending=False)\n",
        "    .reset_index()\n",
        ")\n",
        "\n",
        "fig_asylum_region_bar = px.bar(\n",
        "    regional_totals,\n",
        "    x=\"Refugees_asylum\",\n",
        "    y=\"region\",\n",
        "    orientation=\"h\",\n",
        "    title=\"Total Refugees by Region of Asylum\",\n",
        "    labels={\"Refugees_asylum\": \"Total Refugees Hosted\", \"region\": \"Region\"},\n",
        "    template=\"plotly_white\",\n",
        "    color_discrete_sequence=[\"#1f77b4\"]\n",
        ")\n",
        "fig_asylum_region_bar.update_layout(yaxis=dict(categoryorder=\"total ascending\"))\n",
        "fig_asylum_region_bar.show()\n",
        "\n",
        "\n",
        "regional_trends = (\n",
        "    df_asylm.groupby([\"region\", \"Year\"])[\"Refugees_asylum\"]\n",
        "    .sum()\n",
        "    .reset_index()\n",
        ")\n",
        "\n",
        "fig_asylum_region_trend = px.line(\n",
        "    regional_trends,\n",
        "    x=\"Year\",\n",
        "    y=\"Refugees_asylum\",\n",
        "    color=\"region\",\n",
        "    title=\"Refugee Hosting Trends by Region (Asylum)\",\n",
        "    labels={\"Refugees_asylum\": \"Refugees\", \"Year\": \"Year\"},\n",
        "    template=\"plotly_white\"\n",
        ")\n",
        "\n",
        "fig_asylum_region_trend.update_layout(\n",
        "    legend=dict(orientation=\"h\", x=0, y=1.1),\n",
        "    xaxis=dict(tickmode=\"linear\", dtick=5)\n",
        ")\n",
        "fig_asylum_region_trend.show()\n",
        "\n",
        "\n",
        "regional_trends_recent = regional_trends[regional_trends[\"Year\"] >= 2010]\n",
        "\n",
        "\n",
        "```\n",
        "\n",
        "\n",
        "# Global overview\n",
        "\n",
        "## {height = 20%}\n",
        "\n",
        ":::{.valuebox title=\"Total of refugees and asylum seeker\" color=\"#0072c6\" icon=\"people-fill\" }\n",
        "`{python} total_refugees_origin` \n",
        "\n",
        "Million people.\n",
        ":::\n",
        "\n",
        ":::{.valuebox title=\"Countries of origin\" color=\"#0072c6\" icon=\"globe-europe-africa\" }\n",
        "`{python} total_countries_origin`\n",
        ":::\n",
        "\n",
        "\n",
        ":::{.valuebox title=\"Countries of asylum\" color=\"#0072c6\" icon=\"globe-central-south-asia\" }\n",
        "`{python} total_countries_asylum` \n",
        ":::\n",
        "\n",
        "##"
      ],
      "id": "b62c8911"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "fig1"
      ],
      "id": "2ec4ef40",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "# Countries of Origin\n",
        "\n",
        "### {width=\"50%\"}"
      ],
      "id": "94a624be"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#fig_trend_origins"
      ],
      "id": "1af36076",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### {width=\"50%\"}\n"
      ],
      "id": "912d6182"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "fig_top10_origin"
      ],
      "id": "5826529d",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "# Countries of Asylum\n"
      ],
      "id": "53fc56e7"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Display\n",
        "fig_top10_asylum.show()"
      ],
      "id": "024e4f9f",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "fig_trend_asylums.show()"
      ],
      "id": "4cf574b5",
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "C:\\Users\\PC\\AppData\\Roaming\\Python\\share\\jupyter\\kernels\\python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}